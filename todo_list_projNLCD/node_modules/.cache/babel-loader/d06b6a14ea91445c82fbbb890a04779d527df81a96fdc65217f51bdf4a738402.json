{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(_ref3 => {\n  let {\n    theme,\n    ownerState\n  } = _ref3;\n  return _extends({\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(12),\n    minWidth: RADIUS_STANDARD * 2,\n    lineHeight: 1,\n    padding: '0 6px',\n    height: RADIUS_STANDARD * 2,\n    borderRadius: RADIUS_STANDARD,\n    zIndex: 1,\n    // Render the badge on top of potential ripples.\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  }, ownerState.color !== 'default' && {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n    color: (theme.vars || theme).palette[ownerState.color].contrastText\n  }, ownerState.variant === 'dot' && {\n    borderRadius: RADIUS_DOT,\n    height: RADIUS_DOT * 2,\n    minWidth: RADIUS_DOT * 2,\n    padding: 0\n  }, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n    top: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n    bottom: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n    top: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n    bottom: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n    top: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n    bottom: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n    top: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n    bottom: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  }, ownerState.invisible && {\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  });\n});\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component = 'span',\n      components = {},\n      componentsProps = {},\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  let displayValue;\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    slots: {\n      root: RootSlot,\n      badge: BadgeSlot\n    },\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className),\n    slotProps: {\n      root: _extends({}, rootSlotProps, shouldSpreadAdditionalProps(RootSlot) && {\n        as: component,\n        ownerState: _extends({}, rootSlotProps == null ? void 0 : rootSlotProps.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, badgeSlotProps, {\n        className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n      }, shouldSpreadAdditionalProps(BadgeSlot) && {\n        ownerState: _extends({}, badgeSlotProps == null ? void 0 : badgeSlotProps.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\r\n   * The anchor of the badge.\r\n   * @default {\r\n   *   vertical: 'top',\r\n   *   horizontal: 'right',\r\n   * }\r\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\r\n   * The content rendered within the badge.\r\n   */\n  badgeContent: PropTypes.node,\n  /**\r\n   * The badge will be added relative to this node.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * The color of the component.\r\n   * It supports both default and custom theme colors, which can be added as shown in the\r\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\r\n   * @default 'default'\r\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n  /**\r\n   * The components used for each slot inside.\r\n   *\r\n   * This prop is an alias for the `slots` prop.\r\n   * It's recommended to use the `slots` prop instead.\r\n   *\r\n   * @default {}\r\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\r\n   * The extra props for the slot components.\r\n   * You can override the existing props or add new ones.\r\n   *\r\n   * This prop is an alias for the `slotProps` prop.\r\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\r\n   *\r\n   * @default {}\r\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\r\n   * If `true`, the badge is invisible.\r\n   * @default false\r\n   */\n  invisible: PropTypes.bool,\n  /**\r\n   * Max count to show.\r\n   * @default 99\r\n   */\n  max: PropTypes.number,\n  /**\r\n   * Wrapped shape the badge should overlap.\r\n   * @default 'rectangular'\r\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\r\n   * Controls whether the badge is hidden when `badgeContent` is zero.\r\n   * @default false\r\n   */\n  showZero: PropTypes.bool,\n  /**\r\n   * The props used for each slot inside the Badge.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\r\n   * The components used for each slot inside the Badge.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\r\n   * The variant to use.\r\n   * @default 'standard'\r\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","usePreviousProps","composeClasses","BadgeUnstyled","styled","useThemeProps","shouldSpreadAdditionalProps","capitalize","badgeClasses","getBadgeUtilityClass","jsx","_jsx","RADIUS_STANDARD","RADIUS_DOT","useUtilityClasses","ownerState","color","anchorOrigin","invisible","overlap","variant","classes","slots","root","badge","vertical","horizontal","BadgeRoot","name","slot","overridesResolver","props","styles","position","display","verticalAlign","flexShrink","BadgeBadge","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","vars","palette","main","contrastText","top","right","transform","transformOrigin","bottom","left","leavingScreen","Badge","forwardRef","inProps","ref","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","anchorOriginProp","className","component","components","componentsProps","overlapProp","colorProp","invisibleProp","max","badgeContent","badgeContentProp","slotProps","showZero","variantProp","other","prevProps","displayValue","Number","RootSlot","Root","BadgeSlot","rootSlotProps","badgeSlotProps","as","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","children","object","string","oneOfType","elementType","func","bool","number","sx","arrayOf"],"sources":["C:/Users/clemd/Desktop/Projet ReactJS/ProjetTodoListNLCD/todo_list_projNLCD/node_modules/@mui/material/Badge/Badge.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { usePreviousProps } from '@mui/utils';\r\nimport composeClasses from '@mui/base/composeClasses';\r\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\r\nimport styled from '../styles/styled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\r\nimport capitalize from '../utils/capitalize';\r\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst RADIUS_STANDARD = 10;\r\nconst RADIUS_DOT = 4;\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    color,\r\n    anchorOrigin,\r\n    invisible,\r\n    overlap,\r\n    variant,\r\n    classes = {}\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root'],\r\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\r\n  };\r\n  return composeClasses(slots, getBadgeUtilityClass, classes);\r\n};\r\nconst BadgeRoot = styled('span', {\r\n  name: 'MuiBadge',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => styles.root\r\n})({\r\n  position: 'relative',\r\n  display: 'inline-flex',\r\n  // For correct alignment with the text.\r\n  verticalAlign: 'middle',\r\n  flexShrink: 0\r\n});\r\nconst BadgeBadge = styled('span', {\r\n  name: 'MuiBadge',\r\n  slot: 'Badge',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\r\n  }\r\n})(({\r\n  theme,\r\n  ownerState\r\n}) => _extends({\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  justifyContent: 'center',\r\n  alignContent: 'center',\r\n  alignItems: 'center',\r\n  position: 'absolute',\r\n  boxSizing: 'border-box',\r\n  fontFamily: theme.typography.fontFamily,\r\n  fontWeight: theme.typography.fontWeightMedium,\r\n  fontSize: theme.typography.pxToRem(12),\r\n  minWidth: RADIUS_STANDARD * 2,\r\n  lineHeight: 1,\r\n  padding: '0 6px',\r\n  height: RADIUS_STANDARD * 2,\r\n  borderRadius: RADIUS_STANDARD,\r\n  zIndex: 1,\r\n  // Render the badge on top of potential ripples.\r\n  transition: theme.transitions.create('transform', {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.enteringScreen\r\n  })\r\n}, ownerState.color !== 'default' && {\r\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\r\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\r\n}, ownerState.variant === 'dot' && {\r\n  borderRadius: RADIUS_DOT,\r\n  height: RADIUS_DOT * 2,\r\n  minWidth: RADIUS_DOT * 2,\r\n  padding: 0\r\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\r\n  top: 0,\r\n  right: 0,\r\n  transform: 'scale(1) translate(50%, -50%)',\r\n  transformOrigin: '100% 0%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(50%, -50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\r\n  bottom: 0,\r\n  right: 0,\r\n  transform: 'scale(1) translate(50%, 50%)',\r\n  transformOrigin: '100% 100%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(50%, 50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\r\n  top: 0,\r\n  left: 0,\r\n  transform: 'scale(1) translate(-50%, -50%)',\r\n  transformOrigin: '0% 0%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(-50%, -50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\r\n  bottom: 0,\r\n  left: 0,\r\n  transform: 'scale(1) translate(-50%, 50%)',\r\n  transformOrigin: '0% 100%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(-50%, 50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\r\n  top: '14%',\r\n  right: '14%',\r\n  transform: 'scale(1) translate(50%, -50%)',\r\n  transformOrigin: '100% 0%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(50%, -50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\r\n  bottom: '14%',\r\n  right: '14%',\r\n  transform: 'scale(1) translate(50%, 50%)',\r\n  transformOrigin: '100% 100%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(50%, 50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\r\n  top: '14%',\r\n  left: '14%',\r\n  transform: 'scale(1) translate(-50%, -50%)',\r\n  transformOrigin: '0% 0%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(-50%, -50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\r\n  bottom: '14%',\r\n  left: '14%',\r\n  transform: 'scale(1) translate(-50%, 50%)',\r\n  transformOrigin: '0% 100%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(-50%, 50%)'\r\n  }\r\n}, ownerState.invisible && {\r\n  transition: theme.transitions.create('transform', {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.leavingScreen\r\n  })\r\n}));\r\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\r\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiBadge'\r\n  });\r\n  const {\r\n      anchorOrigin: anchorOriginProp = {\r\n        vertical: 'top',\r\n        horizontal: 'right'\r\n      },\r\n      className,\r\n      component = 'span',\r\n      components = {},\r\n      componentsProps = {},\r\n      overlap: overlapProp = 'rectangular',\r\n      color: colorProp = 'default',\r\n      invisible: invisibleProp = false,\r\n      max,\r\n      badgeContent: badgeContentProp,\r\n      slots,\r\n      slotProps,\r\n      showZero = false,\r\n      variant: variantProp = 'standard'\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const prevProps = usePreviousProps({\r\n    anchorOrigin: anchorOriginProp,\r\n    color: colorProp,\r\n    overlap: overlapProp,\r\n    variant: variantProp\r\n  });\r\n  let invisible = invisibleProp;\r\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\r\n    invisible = true;\r\n  }\r\n  const {\r\n    color = colorProp,\r\n    overlap = overlapProp,\r\n    anchorOrigin = anchorOriginProp,\r\n    variant = variantProp\r\n  } = invisible ? prevProps : props;\r\n  const ownerState = _extends({}, props, {\r\n    anchorOrigin,\r\n    invisible,\r\n    color,\r\n    overlap,\r\n    variant\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  let displayValue;\r\n  if (variant !== 'dot') {\r\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\r\n  }\r\n\r\n  // support both `slots` and `components` for backward compatibility\r\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\r\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\r\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\r\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\r\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\r\n    invisible: invisibleProp,\r\n    badgeContent: displayValue,\r\n    showZero: showZero,\r\n    max: max\r\n  }, other, {\r\n    slots: {\r\n      root: RootSlot,\r\n      badge: BadgeSlot\r\n    },\r\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className),\r\n    slotProps: {\r\n      root: _extends({}, rootSlotProps, shouldSpreadAdditionalProps(RootSlot) && {\r\n        as: component,\r\n        ownerState: _extends({}, rootSlotProps == null ? void 0 : rootSlotProps.ownerState, {\r\n          anchorOrigin,\r\n          color,\r\n          overlap,\r\n          variant\r\n        })\r\n      }),\r\n      badge: _extends({}, badgeSlotProps, {\r\n        className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\r\n      }, shouldSpreadAdditionalProps(BadgeSlot) && {\r\n        ownerState: _extends({}, badgeSlotProps == null ? void 0 : badgeSlotProps.ownerState, {\r\n          anchorOrigin,\r\n          color,\r\n          overlap,\r\n          variant\r\n        })\r\n      })\r\n    },\r\n    ref: ref\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * The anchor of the badge.\r\n   * @default {\r\n   *   vertical: 'top',\r\n   *   horizontal: 'right',\r\n   * }\r\n   */\r\n  anchorOrigin: PropTypes.shape({\r\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\r\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\r\n  }),\r\n  /**\r\n   * The content rendered within the badge.\r\n   */\r\n  badgeContent: PropTypes.node,\r\n  /**\r\n   * The badge will be added relative to this node.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The color of the component.\r\n   * It supports both default and custom theme colors, which can be added as shown in the\r\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\r\n   * @default 'default'\r\n   */\r\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * The components used for each slot inside.\r\n   *\r\n   * This prop is an alias for the `slots` prop.\r\n   * It's recommended to use the `slots` prop instead.\r\n   *\r\n   * @default {}\r\n   */\r\n  components: PropTypes.shape({\r\n    Badge: PropTypes.elementType,\r\n    Root: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * The extra props for the slot components.\r\n   * You can override the existing props or add new ones.\r\n   *\r\n   * This prop is an alias for the `slotProps` prop.\r\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\r\n   *\r\n   * @default {}\r\n   */\r\n  componentsProps: PropTypes.shape({\r\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * If `true`, the badge is invisible.\r\n   * @default false\r\n   */\r\n  invisible: PropTypes.bool,\r\n  /**\r\n   * Max count to show.\r\n   * @default 99\r\n   */\r\n  max: PropTypes.number,\r\n  /**\r\n   * Wrapped shape the badge should overlap.\r\n   * @default 'rectangular'\r\n   */\r\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\r\n  /**\r\n   * Controls whether the badge is hidden when `badgeContent` is zero.\r\n   * @default false\r\n   */\r\n  showZero: PropTypes.bool,\r\n  /**\r\n   * The props used for each slot inside the Badge.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside the Badge.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    badge: PropTypes.elementType,\r\n    root: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The variant to use.\r\n   * @default 'standard'\r\n   */\r\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\r\n} : void 0;\r\nexport default Badge;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}