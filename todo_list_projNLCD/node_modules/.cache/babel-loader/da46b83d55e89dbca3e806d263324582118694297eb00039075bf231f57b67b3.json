{"ast":null,"code":"/**\r\n * This function create an object from keys, value and then assign to target\r\n *\r\n * @param {Object} obj : the target object to be assigned\r\n * @param {string[]} keys\r\n * @param {string | number} value\r\n *\r\n * @example\r\n * const source = {}\r\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\r\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\r\n *\r\n * @example\r\n * const source = { palette: { primary: 'var(--palette-primary)' } }\r\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\r\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\r\n */\nexport const assignNestedKeys = function (obj, keys, value) {\n  let arrayKeys = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (Array.isArray(temp)) {\n        temp[Number(k)] = value;\n      } else if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = arrayKeys.includes(k) ? [] : {};\n      }\n      temp = temp[k];\n    }\n  });\n};\n\n/**\r\n *\r\n * @param {Object} obj : source object\r\n * @param {Function} callback : a function that will be called when\r\n *                   - the deepest key in source object is reached\r\n *                   - the value of the deepest key is NOT `undefined` | `null`\r\n *\r\n * @example\r\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\r\n * // ['palette', 'primary', 'main'] '#000000'\r\n */\nexport const walkObjectDeep = (obj, callback, shouldSkipPaths) => {\n  function recurse(object) {\n    let parentKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let arrayKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    Object.entries(object).forEach(_ref => {\n      let [key, value] = _ref;\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\n        if (value !== undefined && value !== null) {\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\n            recurse(value, [...parentKeys, key], Array.isArray(value) ? [...arrayKeys, key] : arrayKeys);\n          } else {\n            callback([...parentKeys, key], value, arrayKeys);\n          }\n        }\n      }\n    });\n  }\n  recurse(obj);\n};\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // CSS property that are unitless\n      return value;\n    }\n    const lastKey = keys[keys.length - 1];\n    if (lastKey.toLowerCase().indexOf('opacity') >= 0) {\n      // opacity values are unitless\n      return value;\n    }\n    return `${value}px`;\n  }\n  return value;\n};\n\n/**\r\n * a function that parse theme and return { css, vars }\r\n *\r\n * @param {Object} theme\r\n * @param {{\r\n *  prefix?: string,\r\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\r\n * }} options.\r\n *  `prefix`: The prefix of the generated CSS variables. This function does not change the value.\r\n *\r\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme).\r\n *\r\n * @example\r\n * const { css, vars } = parser({\r\n *   fontSize: 12,\r\n *   lineHeight: 1.2,\r\n *   palette: { primary: { 500: 'var(--color)' } }\r\n * }, { prefix: 'foo' })\r\n *\r\n * console.log(css) // { '--foo-fontSize': '12px', '--foo-lineHeight': 1.2, '--foo-palette-primary-500': 'var(--color)' }\r\n * console.log(vars) // { fontSize: 'var(--foo-fontSize)', lineHeight: 'var(--foo-lineHeight)', palette: { primary: { 500: 'var(--foo-palette-primary-500)' } } }\r\n */\nexport default function cssVarsParser(theme, options) {\n  const {\n    prefix,\n    shouldSkipGeneratingVar\n  } = options || {};\n  const css = {};\n  const vars = {};\n  walkObjectDeep(theme, (keys, value, arrayKeys) => {\n    if (typeof value === 'string' || typeof value === 'number') {\n      if (!shouldSkipGeneratingVar || !shouldSkipGeneratingVar(keys, value)) {\n        // only create css & var if `shouldSkipGeneratingVar` return false\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n        Object.assign(css, {\n          [cssVar]: getCssValue(keys, value)\n        });\n        assignNestedKeys(vars, keys, `var(${cssVar})`, arrayKeys);\n      }\n    }\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\n  );\n\n  return {\n    css,\n    vars\n  };\n}","map":{"version":3,"names":["assignNestedKeys","obj","keys","value","arrayKeys","temp","forEach","k","index","length","Array","isArray","Number","includes","walkObjectDeep","callback","shouldSkipPaths","recurse","object","parentKeys","Object","entries","key","undefined","getCssValue","some","prop","lastKey","toLowerCase","indexOf","cssVarsParser","theme","options","prefix","shouldSkipGeneratingVar","css","vars","cssVar","join","assign"],"sources":["C:/Users/clemd/Desktop/Projet ReactJS/ProjetTodoListNLCD/todo_list_projNLCD/node_modules/@mui/system/esm/cssVars/cssVarsParser.js"],"sourcesContent":["/**\r\n * This function create an object from keys, value and then assign to target\r\n *\r\n * @param {Object} obj : the target object to be assigned\r\n * @param {string[]} keys\r\n * @param {string | number} value\r\n *\r\n * @example\r\n * const source = {}\r\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\r\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\r\n *\r\n * @example\r\n * const source = { palette: { primary: 'var(--palette-primary)' } }\r\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\r\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\r\n */\r\nexport const assignNestedKeys = (obj, keys, value, arrayKeys = []) => {\r\n  let temp = obj;\r\n  keys.forEach((k, index) => {\r\n    if (index === keys.length - 1) {\r\n      if (Array.isArray(temp)) {\r\n        temp[Number(k)] = value;\r\n      } else if (temp && typeof temp === 'object') {\r\n        temp[k] = value;\r\n      }\r\n    } else if (temp && typeof temp === 'object') {\r\n      if (!temp[k]) {\r\n        temp[k] = arrayKeys.includes(k) ? [] : {};\r\n      }\r\n      temp = temp[k];\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param {Object} obj : source object\r\n * @param {Function} callback : a function that will be called when\r\n *                   - the deepest key in source object is reached\r\n *                   - the value of the deepest key is NOT `undefined` | `null`\r\n *\r\n * @example\r\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\r\n * // ['palette', 'primary', 'main'] '#000000'\r\n */\r\nexport const walkObjectDeep = (obj, callback, shouldSkipPaths) => {\r\n  function recurse(object, parentKeys = [], arrayKeys = []) {\r\n    Object.entries(object).forEach(([key, value]) => {\r\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\r\n        if (value !== undefined && value !== null) {\r\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\r\n            recurse(value, [...parentKeys, key], Array.isArray(value) ? [...arrayKeys, key] : arrayKeys);\r\n          } else {\r\n            callback([...parentKeys, key], value, arrayKeys);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  recurse(obj);\r\n};\r\nconst getCssValue = (keys, value) => {\r\n  if (typeof value === 'number') {\r\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\r\n      // CSS property that are unitless\r\n      return value;\r\n    }\r\n    const lastKey = keys[keys.length - 1];\r\n    if (lastKey.toLowerCase().indexOf('opacity') >= 0) {\r\n      // opacity values are unitless\r\n      return value;\r\n    }\r\n    return `${value}px`;\r\n  }\r\n  return value;\r\n};\r\n\r\n/**\r\n * a function that parse theme and return { css, vars }\r\n *\r\n * @param {Object} theme\r\n * @param {{\r\n *  prefix?: string,\r\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\r\n * }} options.\r\n *  `prefix`: The prefix of the generated CSS variables. This function does not change the value.\r\n *\r\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme).\r\n *\r\n * @example\r\n * const { css, vars } = parser({\r\n *   fontSize: 12,\r\n *   lineHeight: 1.2,\r\n *   palette: { primary: { 500: 'var(--color)' } }\r\n * }, { prefix: 'foo' })\r\n *\r\n * console.log(css) // { '--foo-fontSize': '12px', '--foo-lineHeight': 1.2, '--foo-palette-primary-500': 'var(--color)' }\r\n * console.log(vars) // { fontSize: 'var(--foo-fontSize)', lineHeight: 'var(--foo-lineHeight)', palette: { primary: { 500: 'var(--foo-palette-primary-500)' } } }\r\n */\r\nexport default function cssVarsParser(theme, options) {\r\n  const {\r\n    prefix,\r\n    shouldSkipGeneratingVar\r\n  } = options || {};\r\n  const css = {};\r\n  const vars = {};\r\n  walkObjectDeep(theme, (keys, value, arrayKeys) => {\r\n    if (typeof value === 'string' || typeof value === 'number') {\r\n      if (!shouldSkipGeneratingVar || !shouldSkipGeneratingVar(keys, value)) {\r\n        // only create css & var if `shouldSkipGeneratingVar` return false\r\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\r\n        Object.assign(css, {\r\n          [cssVar]: getCssValue(keys, value)\r\n        });\r\n        assignNestedKeys(vars, keys, `var(${cssVar})`, arrayKeys);\r\n      }\r\n    }\r\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\r\n  );\r\n\r\n  return {\r\n    css,\r\n    vars\r\n  };\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}