{"ast":null,"code":"var _jsxFileName = \"E:\\\\Nicolas\\\\Workspace\\\\VS\\\\paa2Projects\\\\helloworld\\\\src\\\\components\\\\QuotesNew.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { Card, CardContent, Typography } from \"@mui/material\";\nimport { Box, Container } from \"@mui/system\";\nimport { api } from \"../lib/Api\";\nimport SearchField from \"./SearchField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class QuotesNew extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      \"authors\": [],\n      \"quote\": '',\n      \"authorId\": ''\n    };\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Author:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"authorId\",\n          value: this.state.authorId,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), this.state.authors.map(author => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: author.id,\n            children: author.name\n          }, author.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Quote:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"authorId\",\n          value: this.state.authorId,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), this.state.authors.map(author => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: author.id,\n            children: author.name\n          }, author.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n  // async handleSubmit = (event) => {\n  //     event.preventDefault();\n  //     // appeler une fonction pour enregistrer la citation avec l'auteur correspondant dans la base de données\n  //     api.post(\"/quotes\", {content: \"\", authorId:\"\"});\n  //     const reponse = await api.insertQuote(content, authorId);\n  // }\n\n  async componentDidMount() {\n    const authors = await api.getAuthors();\n    this.setState({\n      authors: authors\n    });\n  }\n}","map":{"version":3,"names":["React","Component","Button","Card","CardContent","Typography","Box","Container","api","SearchField","QuotesNew","state","handleChange","event","setState","target","name","value","render","authorId","authors","map","author","id","componentDidMount","getAuthors"],"sources":["E:/Nicolas/Workspace/VS/paa2Projects/helloworld/src/components/QuotesNew.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport { Card, CardContent, Typography } from \"@mui/material\";\r\nimport { Box, Container } from \"@mui/system\";\r\n\r\nimport {api} from \"../lib/Api\";\r\nimport SearchField from \"./SearchField\";\r\n\r\nexport default class QuotesNew extends React.Component {\r\n    state = {\r\n        \"authors\":[],\r\n        \"quote\": '',\r\n        \"authorId\": ''\r\n    };\r\n    \r\n    \r\n    render(){\r\n        return ( \r\n            <Container maxWidth = \"sm\">\r\n\r\n                <label>\r\n                Author:\r\n                    <select name=\"authorId\" value={this.state.authorId} onChange={this.handleChange}>\r\n                        <option value=\"\">Author</option>\r\n                        {\r\n                            this.state.authors.map(author => (\r\n                                <option key={author.id} value={author.id}>{author.name}</option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </label>\r\n         \r\n                <label>\r\n                Quote:\r\n                    <select name=\"authorId\" value={this.state.authorId} onChange={this.handleChange}>\r\n                        <option value=\"\">Author</option>\r\n                        {\r\n                            this.state.authors.map(author => (\r\n                                <option key={author.id} value={author.id}>{author.name}</option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </label>            \r\n        \r\n            </Container>\r\n        )\r\n    }\r\n    \r\n    \r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n    \r\n    // async handleSubmit = (event) => {\r\n    //     event.preventDefault();\r\n    //     // appeler une fonction pour enregistrer la citation avec l'auteur correspondant dans la base de données\r\n    //     api.post(\"/quotes\", {content: \"\", authorId:\"\"});\r\n    //     const reponse = await api.insertQuote(content, authorId);\r\n    // }\r\n    \r\n    async componentDidMount(){\r\n        const authors = await api.getAuthors();\r\n        this.setState({authors: authors});\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAC7D,SAASC,GAAG,EAAEC,SAAS,QAAQ,aAAa;AAE5C,SAAQC,GAAG,QAAO,YAAY;AAC9B,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,eAAe,MAAMC,SAAS,SAASV,KAAK,CAACC,SAAS,CAAC;EAAA;IAAA;IAAA,KACnDU,KAAK,GAAG;MACJ,SAAS,EAAC,EAAE;MACZ,OAAO,EAAE,EAAE;MACX,UAAU,EAAE;IAChB,CAAC;IAAA,KAoCDC,YAAY,GAAIC,KAAK,IAAK;MACtB,IAAI,CAACC,QAAQ,CAAC;QAAE,CAACD,KAAK,CAACE,MAAM,CAACC,IAAI,GAAGH,KAAK,CAACE,MAAM,CAACE;MAAM,CAAC,CAAC;IAC9D,CAAC;EAAA;EAnCDC,MAAM,GAAE;IACJ,oBACI,QAAC,SAAS;MAAC,QAAQ,EAAG,IAAI;MAAA,wBAEtB;QAAA,WAAO,SAEH;UAAQ,IAAI,EAAC,UAAU;UAAC,KAAK,EAAE,IAAI,CAACP,KAAK,CAACQ,QAAS;UAAC,QAAQ,EAAE,IAAI,CAACP,YAAa;UAAA,wBAC5E;YAAQ,KAAK,EAAC,EAAE;YAAA,UAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAS,EAE5B,IAAI,CAACD,KAAK,CAACS,OAAO,CAACC,GAAG,CAACC,MAAM,iBACzB;YAAwB,KAAK,EAAEA,MAAM,CAACC,EAAG;YAAA,UAAED,MAAM,CAACN;UAAI,GAAzCM,MAAM,CAACC,EAAE;YAAA;YAAA;YAAA;UAAA,QACzB,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAED;MAAA;QAAA;QAAA;QAAA;MAAA,QACL,eAER;QAAA,WAAO,QAEH;UAAQ,IAAI,EAAC,UAAU;UAAC,KAAK,EAAE,IAAI,CAACZ,KAAK,CAACQ,QAAS;UAAC,QAAQ,EAAE,IAAI,CAACP,YAAa;UAAA,wBAC5E;YAAQ,KAAK,EAAC,EAAE;YAAA,UAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAS,EAE5B,IAAI,CAACD,KAAK,CAACS,OAAO,CAACC,GAAG,CAACC,MAAM,iBACzB;YAAwB,KAAK,EAAEA,MAAM,CAACC,EAAG;YAAA,UAAED,MAAM,CAACN;UAAI,GAAzCM,MAAM,CAACC,EAAE;YAAA;YAAA;YAAA;UAAA,QACzB,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAED;MAAA;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA,QAEA;EAEpB;EAOA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,iBAAiB,GAAE;IACrB,MAAMJ,OAAO,GAAG,MAAMZ,GAAG,CAACiB,UAAU,EAAE;IACtC,IAAI,CAACX,QAAQ,CAAC;MAACM,OAAO,EAAEA;IAAO,CAAC,CAAC;EACrC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}