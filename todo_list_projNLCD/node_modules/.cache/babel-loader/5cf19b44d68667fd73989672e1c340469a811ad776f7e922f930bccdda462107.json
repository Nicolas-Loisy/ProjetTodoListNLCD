{"ast":null,"code":"var _jsxFileName = \"E:\\\\Nicolas\\\\Workspace\\\\VS\\\\paa2Projects\\\\helloworld\\\\src\\\\components\\\\QuotesNew.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { Card, CardContent, Typography } from \"@mui/material\";\nimport { Box, Container } from \"@mui/system\";\nimport { api } from \"../lib/Api\";\nimport SearchField from \"./SearchField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class QuotesNew extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      \"authors\": [],\n      \"content\": '',\n      \"authorId\": '',\n      \"confirmation\": false\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Author:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"authorId\",\n          value: this.state.authorId,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Wesh donne 1 ot'heur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), this.state.authors.map(author => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: author.id,\n            children: author.name\n          }, author.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Quote:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          name: \"content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleSubmit,\n        children: \"Valider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n  updateAuthor(event) {\n    this.setState({\n      ...this.state,\n      authorId: event.target.value,\n      confirmation: false\n    });\n  }\n  updateContent(event) {\n    this.setState({\n      ...this.state,\n      content: event.target.value,\n      confirmation: false\n    });\n  }\n  async submit(event) {\n    console.log(\"yo test\");\n    event.preventDefault();\n    // appeler une fonction pour enregistrer la citation avec l'auteur correspondant dans la base de données\n    // api.post(\"/quotes\", {content: \"\", authorId:\"\"});\n    // const response = await api.insertQuote(content, authorId);\n    await api.insertQuote(this.state.content, this.state.authorId);\n    this.setState({\n      ...this.state,\n      confirmation: true\n    });\n  }\n  async componentDidMount() {\n    const authors = await api.getAuthors();\n    this.setState({\n      ...this.state,\n      authors: authors\n    });\n  }\n}","map":{"version":3,"names":["React","Component","Button","Card","CardContent","Typography","Box","Container","api","SearchField","QuotesNew","state","render","authorId","handleChange","authors","map","author","id","name","handleSubmit","updateAuthor","event","setState","target","value","confirmation","updateContent","content","submit","console","log","preventDefault","insertQuote","componentDidMount","getAuthors"],"sources":["E:/Nicolas/Workspace/VS/paa2Projects/helloworld/src/components/QuotesNew.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport { Card, CardContent, Typography } from \"@mui/material\";\r\nimport { Box, Container } from \"@mui/system\";\r\n\r\nimport {api} from \"../lib/Api\";\r\nimport SearchField from \"./SearchField\";\r\n\r\nexport default class QuotesNew extends React.Component {\r\n    state = {\r\n        \"authors\":[],\r\n        \"content\": '',\r\n        \"authorId\": '',\r\n        \"confirmation\": false\r\n    };\r\n    \r\n    \r\n    render(){\r\n        return ( \r\n            <Container maxWidth = \"sm\">\r\n\r\n                <label>\r\n                Author:\r\n                    <select name=\"authorId\" value={this.state.authorId} onChange={this.handleChange}>\r\n                        <option value=\"\">Wesh donne 1 ot'heur</option>\r\n                        {\r\n                            this.state.authors.map(author => (\r\n                                <option key={author.id} value={author.id}>{author.name}</option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </label>\r\n                <br/>\r\n         \r\n                <label>\r\n                Quote:\r\n                    <textarea id=\"content\" name=\"content\"/><br/>\r\n                </label>            \r\n\r\n                <button onClick={this.handleSubmit}>Valider</button>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    updateAuthor(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            authorId: event.target.value,\r\n            confirmation: false,\r\n        });\r\n    }\r\n    \r\n    updateContent(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            content: event.target.value,\r\n            confirmation: false,\r\n        });\r\n    }\r\n    \r\n    async submit(event) {\r\n        console.log(\"yo test\");\r\n        event.preventDefault();\r\n        // appeler une fonction pour enregistrer la citation avec l'auteur correspondant dans la base de données\r\n        // api.post(\"/quotes\", {content: \"\", authorId:\"\"});\r\n        // const response = await api.insertQuote(content, authorId);\r\n        await api.insertQuote(this.state.content, this.state.authorId);\r\n        this.setState({...this.state, confirmation: true});\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        const authors = await api.getAuthors();\r\n        this.setState({...this.state, authors: authors});\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAC7D,SAASC,GAAG,EAAEC,SAAS,QAAQ,aAAa;AAE5C,SAAQC,GAAG,QAAO,YAAY;AAC9B,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,eAAe,MAAMC,SAAS,SAASV,KAAK,CAACC,SAAS,CAAC;EAAA;IAAA;IAAA,KACnDU,KAAK,GAAG;MACJ,SAAS,EAAC,EAAE;MACZ,SAAS,EAAE,EAAE;MACb,UAAU,EAAE,EAAE;MACd,cAAc,EAAE;IACpB,CAAC;EAAA;EAGDC,MAAM,GAAE;IACJ,oBACI,QAAC,SAAS;MAAC,QAAQ,EAAG,IAAI;MAAA,wBAEtB;QAAA,WAAO,SAEH;UAAQ,IAAI,EAAC,UAAU;UAAC,KAAK,EAAE,IAAI,CAACD,KAAK,CAACE,QAAS;UAAC,QAAQ,EAAE,IAAI,CAACC,YAAa;UAAA,wBAC5E;YAAQ,KAAK,EAAC,EAAE;YAAA,UAAC;UAAoB;YAAA;YAAA;YAAA;UAAA,QAAS,EAE1C,IAAI,CAACH,KAAK,CAACI,OAAO,CAACC,GAAG,CAACC,MAAM,iBACzB;YAAwB,KAAK,EAAEA,MAAM,CAACC,EAAG;YAAA,UAAED,MAAM,CAACE;UAAI,GAAzCF,MAAM,CAACC,EAAE;YAAA;YAAA;YAAA;UAAA,QACzB,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAED;MAAA;QAAA;QAAA;QAAA;MAAA,QACL,eACR;QAAA;QAAA;QAAA;MAAA,QAAK,eAEL;QAAA,WAAO,QAEH;UAAU,EAAE,EAAC,SAAS;UAAC,IAAI,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAE;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACxC,eAER;QAAQ,OAAO,EAAE,IAAI,CAACE,YAAa;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5C;EAEpB;EAEAC,YAAY,CAACC,KAAK,EAAE;IAChB,IAAI,CAACC,QAAQ,CAAC;MACV,GAAG,IAAI,CAACZ,KAAK;MACbE,QAAQ,EAAES,KAAK,CAACE,MAAM,CAACC,KAAK;MAC5BC,YAAY,EAAE;IAClB,CAAC,CAAC;EACN;EAEAC,aAAa,CAACL,KAAK,EAAE;IACjB,IAAI,CAACC,QAAQ,CAAC;MACV,GAAG,IAAI,CAACZ,KAAK;MACbiB,OAAO,EAAEN,KAAK,CAACE,MAAM,CAACC,KAAK;MAC3BC,YAAY,EAAE;IAClB,CAAC,CAAC;EACN;EAEA,MAAMG,MAAM,CAACP,KAAK,EAAE;IAChBQ,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBT,KAAK,CAACU,cAAc,EAAE;IACtB;IACA;IACA;IACA,MAAMxB,GAAG,CAACyB,WAAW,CAAC,IAAI,CAACtB,KAAK,CAACiB,OAAO,EAAE,IAAI,CAACjB,KAAK,CAACE,QAAQ,CAAC;IAC9D,IAAI,CAACU,QAAQ,CAAC;MAAC,GAAG,IAAI,CAACZ,KAAK;MAAEe,YAAY,EAAE;IAAI,CAAC,CAAC;EACtD;EAEA,MAAMQ,iBAAiB,GAAE;IACrB,MAAMnB,OAAO,GAAG,MAAMP,GAAG,CAAC2B,UAAU,EAAE;IACtC,IAAI,CAACZ,QAAQ,CAAC;MAAC,GAAG,IAAI,CAACZ,KAAK;MAAEI,OAAO,EAAEA;IAAO,CAAC,CAAC;EACpD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}