{"ast":null,"code":"var _jsxFileName = \"E:\\\\Nicolas\\\\Workspace\\\\VS\\\\paa2Projects\\\\helloworld\\\\src\\\\components\\\\QuotesList.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { Card, CardContent, Typography } from \"@mui/material\";\nimport { Box, Container } from \"@mui/system\";\nimport { api } from \"../lib/Api\";\nimport SearchField from \"./SearchField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class QuotesList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      \"quotes\": [],\n      \"search\": \"\",\n      \"results\": []\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(SearchField, {\n        value: this.state.search,\n        onChange: e => this.search(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Valider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), this.state.results.map(v => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          mt: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"text.secondary\",\n                children: v.actor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: v.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"Author : \", v.author.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n  search(event) {\n    const search = event.target.value;\n    let results = this.state.quotes;\n    if (search.length > 1) {\n      results = this.state.quotes.filter(q => {\n        return q.content.includes(search);\n      });\n    }\n    this.setState({\n      ...this.state,\n      search,\n      results\n    });\n  }\n  async componentDidMount() {\n    const quotes = await api.getQuotes();\n    this.setState({\n      ...this.state,\n      quotes: quotes,\n      results: quotes\n    });\n  }\n}","map":{"version":3,"names":["React","Component","Button","Card","CardContent","Typography","Box","Container","api","SearchField","QuotesList","state","render","search","e","results","map","v","actor","content","author","name","event","target","value","quotes","length","filter","q","includes","setState","componentDidMount","getQuotes"],"sources":["E:/Nicolas/Workspace/VS/paa2Projects/helloworld/src/components/QuotesList.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport { Card, CardContent, Typography } from \"@mui/material\";\r\nimport { Box, Container } from \"@mui/system\";\r\n\r\nimport {api} from \"../lib/Api\";\r\nimport SearchField from \"./SearchField\";\r\n\r\nexport default class QuotesList extends React.Component {\r\n    state = {\r\n        \"quotes\":[],\r\n        \"search\":\"\",\r\n        \"results\":[]\r\n    };\r\n        \r\n    render(){\r\n        return ( \r\n            <Container maxWidth = \"sm\">\r\n\r\n                <SearchField value={this.state.search} onChange={e=>this.search(e)} />\r\n\r\n                <Button>Valider</Button>\r\n                {\r\n                    this.state.results.map((v)=>{\r\n                        return(\r\n                            <Box mt={3}>\r\n                                <Card>\r\n                                    <CardContent>\r\n                                        <Typography color=\"text.secondary\">\r\n                                            {v.actor}    \r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {v.content}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            Author : {v.author.name}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Box>\r\n                        );\r\n                    })\r\n                }\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    search(event){\r\n        const search = event.target.value;\r\n        let results = this.state.quotes;\r\n        if(search.length > 1){\r\n            results = this.state.quotes.filter(q=>{\r\n                return q.content.includes(search);\r\n            });\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            search,\r\n            results\r\n        });\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const quotes = await api.getQuotes();\r\n        this.setState({\r\n            ...this.state,\r\n            quotes: quotes,\r\n            results: quotes\r\n        });\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAC7D,SAASC,GAAG,EAAEC,SAAS,QAAQ,aAAa;AAE5C,SAAQC,GAAG,QAAO,YAAY;AAC9B,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,eAAe,MAAMC,UAAU,SAASV,KAAK,CAACC,SAAS,CAAC;EAAA;IAAA;IAAA,KACpDU,KAAK,GAAG;MACJ,QAAQ,EAAC,EAAE;MACX,QAAQ,EAAC,EAAE;MACX,SAAS,EAAC;IACd,CAAC;EAAA;EAEDC,MAAM,GAAE;IACJ,oBACI,QAAC,SAAS;MAAC,QAAQ,EAAG,IAAI;MAAA,wBAEtB,QAAC,WAAW;QAAC,KAAK,EAAE,IAAI,CAACD,KAAK,CAACE,MAAO;QAAC,QAAQ,EAAEC,CAAC,IAAE,IAAI,CAACD,MAAM,CAACC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAEtE,QAAC,MAAM;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS,EAEpB,IAAI,CAACH,KAAK,CAACI,OAAO,CAACC,GAAG,CAAEC,CAAC,IAAG;QACxB,oBACI,QAAC,GAAG;UAAC,EAAE,EAAE,CAAE;UAAA,uBACP,QAAC,IAAI;YAAA,uBACD,QAAC,WAAW;cAAA,wBACR,QAAC,UAAU;gBAAC,KAAK,EAAC,gBAAgB;gBAAA,UAC7BA,CAAC,CAACC;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QACC,eACb,QAAC,UAAU;gBAAA,UACND,CAAC,CAACE;cAAO;gBAAA;gBAAA;gBAAA;cAAA,QACD,eACb,QAAC,UAAU;gBAAA,WAAC,WACC,EAACF,CAAC,CAACG,MAAM,CAACC,IAAI;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACd;YAAA;cAAA;cAAA;cAAA;YAAA;UACH;YAAA;YAAA;YAAA;UAAA;QACX;UAAA;UAAA;UAAA;QAAA,QACL;MAEd,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAEE;EAEpB;EAEAR,MAAM,CAACS,KAAK,EAAC;IACT,MAAMT,MAAM,GAAGS,KAAK,CAACC,MAAM,CAACC,KAAK;IACjC,IAAIT,OAAO,GAAG,IAAI,CAACJ,KAAK,CAACc,MAAM;IAC/B,IAAGZ,MAAM,CAACa,MAAM,GAAG,CAAC,EAAC;MACjBX,OAAO,GAAG,IAAI,CAACJ,KAAK,CAACc,MAAM,CAACE,MAAM,CAACC,CAAC,IAAE;QAClC,OAAOA,CAAC,CAACT,OAAO,CAACU,QAAQ,CAAChB,MAAM,CAAC;MACrC,CAAC,CAAC;IACN;IACA,IAAI,CAACiB,QAAQ,CAAC;MACV,GAAG,IAAI,CAACnB,KAAK;MACbE,MAAM;MACNE;IACJ,CAAC,CAAC;EACN;EAEA,MAAMgB,iBAAiB,GAAE;IACrB,MAAMN,MAAM,GAAG,MAAMjB,GAAG,CAACwB,SAAS,EAAE;IACpC,IAAI,CAACF,QAAQ,CAAC;MACV,GAAG,IAAI,CAACnB,KAAK;MACbc,MAAM,EAAEA,MAAM;MACdV,OAAO,EAAEU;IACb,CAAC,CAAC;EACN;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}